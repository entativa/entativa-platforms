# Multi-stage Dockerfile for Rust services
# Stage 1: Build
FROM rust:1.75-alpine AS builder

# Install build dependencies
RUN apk add --no-cache musl-dev pkgconfig openssl-dev

WORKDIR /app

# Copy manifests
COPY Cargo.toml Cargo.lock ./

# Copy source code
COPY src ./src
COPY migrations ./migrations

# Build for release
RUN cargo build --release

# Stage 2: Runtime
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates libgcc

WORKDIR /root/

# Copy binary from builder
COPY --from=builder /app/target/release/media-service ./main
COPY --from=builder /app/migrations ./migrations

# Expose ports
EXPOSE 8087 50051

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-8087}/health || exit 1

# Run the application
CMD ["./main"]
