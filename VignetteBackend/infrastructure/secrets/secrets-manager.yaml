# Secrets Management Architecture
# SECURE - NO .env FILES!
# Using HashiCorp Vault + Kubernetes Secrets + AWS Secrets Manager

---
# Option 1: HashiCorp Vault (RECOMMENDED for production)
# Centralized secrets management with audit logging, dynamic secrets, encryption as a service

apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: entativa-prod
data:
  vault-addr: "https://vault.entativa.com:8200"
  vault-namespace: "production"
  
---
# Vault Secret Paths Structure
# /secret/entativa/production/database/postgres
# /secret/entativa/production/s3/credentials
# /secret/entativa/production/elasticsearch/credentials
# /secret/entativa/production/redis/password
# /secret/entativa/production/jwt/private-key
# /secret/entativa/production/messaging/signal-server-key
# /secret/entativa/production/email/smtp
# /secret/entativa/production/stripe/api-key
# /secret/entativa/production/cloudflare/api-token

---
# Option 2: Kubernetes Secrets (for K8s deployments)
# Encrypted at rest, RBAC controlled

apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: entativa-prod
type: Opaque
stringData:
  # DO NOT commit actual values - use sealed-secrets or external-secrets operator
  host: "VAULT_REF:secret/data/entativa/production/database/postgres#host"
  port: "VAULT_REF:secret/data/entativa/production/database/postgres#port"
  database: "VAULT_REF:secret/data/entativa/production/database/postgres#database"
  username: "VAULT_REF:secret/data/entativa/production/database/postgres#username"
  password: "VAULT_REF:secret/data/entativa/production/database/postgres#password"

---
apiVersion: v1
kind: Secret
metadata:
  name: s3-credentials
  namespace: entativa-prod
type: Opaque
stringData:
  access-key-id: "VAULT_REF:secret/data/entativa/production/s3/credentials#access_key_id"
  secret-access-key: "VAULT_REF:secret/data/entativa/production/s3/credentials#secret_access_key"
  bucket-name: "VAULT_REF:secret/data/entativa/production/s3/credentials#bucket_name"
  region: "VAULT_REF:secret/data/entativa/production/s3/credentials#region"

---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-credentials
  namespace: entativa-prod
type: Opaque
stringData:
  host: "VAULT_REF:secret/data/entativa/production/elasticsearch/credentials#host"
  port: "VAULT_REF:secret/data/entativa/production/elasticsearch/credentials#port"
  username: "VAULT_REF:secret/data/entativa/production/elasticsearch/credentials#username"
  password: "VAULT_REF:secret/data/entativa/production/elasticsearch/credentials#password"
  api-key: "VAULT_REF:secret/data/entativa/production/elasticsearch/credentials#api_key"

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: entativa-prod
type: Opaque
stringData:
  host: "VAULT_REF:secret/data/entativa/production/redis#host"
  port: "VAULT_REF:secret/data/entativa/production/redis#port"
  password: "VAULT_REF:secret/data/entativa/production/redis#password"

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-keys
  namespace: entativa-prod
type: Opaque
stringData:
  private-key: "VAULT_REF:secret/data/entativa/production/jwt#private_key"
  public-key: "VAULT_REF:secret/data/entativa/production/jwt#public_key"

---
apiVersion: v1
kind: Secret
metadata:
  name: messaging-keys
  namespace: entativa-prod
type: Opaque
stringData:
  signal-server-private-key: "VAULT_REF:secret/data/entativa/production/messaging/signal#server_private_key"
  backup-encryption-salt: "VAULT_REF:secret/data/entativa/production/messaging/backup#encryption_salt"

---
apiVersion: v1
kind: Secret
metadata:
  name: email-smtp
  namespace: entativa-prod
type: Opaque
stringData:
  host: "VAULT_REF:secret/data/entativa/production/email/smtp#host"
  port: "VAULT_REF:secret/data/entativa/production/email/smtp#port"
  username: "VAULT_REF:secret/data/entativa/production/email/smtp#username"
  password: "VAULT_REF:secret/data/entativa/production/email/smtp#password"
  from-address: "VAULT_REF:secret/data/entativa/production/email/smtp#from_address"

---
apiVersion: v1
kind: Secret
metadata:
  name: stripe-credentials
  namespace: entativa-prod
type: Opaque
stringData:
  api-key: "VAULT_REF:secret/data/entativa/production/stripe#api_key"
  webhook-secret: "VAULT_REF:secret/data/entativa/production/stripe#webhook_secret"

---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-credentials
  namespace: entativa-prod
type: Opaque
stringData:
  api-token: "VAULT_REF:secret/data/entativa/production/cloudflare#api_token"
  zone-id: "VAULT_REF:secret/data/entativa/production/cloudflare#zone_id"

---
# External Secrets Operator Configuration
# Automatically syncs secrets from Vault to Kubernetes
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: entativa-prod
spec:
  provider:
    vault:
      server: "https://vault.entativa.com:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "entativa-prod"
          serviceAccountRef:
            name: "entativa-sa"

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-external-secret
  namespace: entativa-prod
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: postgres-credentials
    creationPolicy: Owner
  data:
    - secretKey: host
      remoteRef:
        key: entativa/production/database/postgres
        property: host
    - secretKey: port
      remoteRef:
        key: entativa/production/database/postgres
        property: port
    - secretKey: database
      remoteRef:
        key: entativa/production/database/postgres
        property: database
    - secretKey: username
      remoteRef:
        key: entativa/production/database/postgres
        property: username
    - secretKey: password
      remoteRef:
        key: entativa/production/database/postgres
        property: password

---
# Sealed Secrets (Alternative for GitOps)
# Encrypted secrets that can be safely committed to Git
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: postgres-sealed-secret
  namespace: entativa-prod
spec:
  encryptedData:
    # These are encrypted with the cluster's public key
    # Only the cluster can decrypt them
    password: AgCQ7pN8vK... # Encrypted value
    username: AgBxF2mL9... # Encrypted value
